  
*{
    margin: 0;
    padding: 0;
    outline: none;
    box-sizing: border-box;
}

body{
    font-family: montserrat;
    display: flex;
    text-align: center;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: linear-gradient(#9cebfc,#6ae1fb);
}
.center{
    width: 350px;
    background: #07031b;
    border-radius: 20px;

}
.rightSide{
    text-align: start;
    height: 460px;

    width: 350px;
    background: rgb(252, 250, 250);
    border-radius: 20px;
}

input[type="text"]{
    height: 60px;
    width: 300px;
    margin-top: 40px;
    border-radius: 1px;
    border: 1px solid #e1e7ea;
    color: black;
    font-size: 22px;
    font-weight: bold;
    text-align: right;
    padding-right: 20px;
    background: linear-gradient(#d1dce0,#dfe6e9);

}
form .buttons{
    width: 300px;
    margin: 10px 25px 0 25px;
    padding: 10px 0;
}
input[type="button"]{
    width: 60px;
    height: 55px;
    margin: 5px;
    font-size: 22px;
    line-height: 55px;
    border-radius: 3px;
    border: 1px solid #d9d9d9;
    background: linear-gradient(#d9d9d9,#bfbfbf);
}

input[type="button2"]{
    width: 60px;
    height: 55px;
    margin: 5px;
    font-size: 22px;
    line-height: 55px;
    text-align: center;
    border-radius: 3px;
    border: 1px solid #d9d9d9;
    background:#f1bc0e;
}
input[type="button"]:hover{
    transition: .5s;
    background: linear-gradient(#bfbfbf,#d9d9d9);
}
input#clear{
    width: 137px;
    margin: 10px 0px 10 0px;
    font-size: 25px;
    color: white;
    background: #ff1a1a;
    border: 1px solid #b32a00
    
    
}
input#equal{
    width: 58px;
    margin: 10px  0px 10 0px;
    font-size: 30px;
    color: white;
    background: #ff3d00;
    border: 1px solid #b32a00;
}
input#PrintHistory{
    width: 137px;
    margin: 10px 0px 10 0px;
    font-size: 25px;
    color: white;
    background: #ff1a1a;
    border: 1px solid #b32a00

}

#printhistory{
    text-align: center;
    font-size: 18px;
    height: 50px;
    background-color: #f5d15b;
    border-radius: 10px;


}
#history{
    text-align: start;
    font-size: 20px;
    height: 397px;
    background-color: #fae8af;
    border-radius: 10px;
    padding-left: 120px;


}


.container {
	padding: 10px;
	text-align: center;
}

.timer {
	padding: 10px;
	background: linear-gradient(top, #222, #444);
	overflow: hidden;
	display: inline-block;
	border: 7px solid #efefef;
	border-radius: 5px;
	position: relative;
	
	box-shadow: 
		inset 0 -2px 10px 1px rgba(0, 0, 0, 0.75), 
		0 5px 20px -10px rgba(0, 0, 0, 1);
}

.cell {
	/*Should only display 1 digit. Hence height = line height of .numbers
	and width = width of .numbers*/
	width: 0.60em;
	height: 40px;
	font-size: 50px;
	overflow: hidden;
	position: relative;
	float: left;
}

.numbers {
	width: 0.6em;
	line-height: 40px;
	font-family: digital, arial, verdana;
	text-align: center;
	color: #fff;
	
	position: absolute;
	top: 0;
	left: 0;
	
	/*Glow to the text*/
	text-shadow: 0 0 5px rgba(255, 255, 255, 1);
}

/*Styles for the controls*/
#timer_controls {
	margin-top: -5px;
    font-size: 25px;
}
#timer_controls label {
	cursor: pointer;
	padding: 5px 10px;
	background: #efefef;
	font-family: arial, verdana, tahoma;
	font-size: 11px;
	border-radius: 0 0 3px 3px;
}
input[name="controls"] {display: none;}

/*Control code*/
#stop:checked~.timer .numbers {animation-play-state: paused;}
#start:checked~.timer .numbers {animation-play-state: running;}
#reset:checked~.timer .numbers {animation: none;}

.moveten {
	/*The digits move but dont look good. We will use steps now
	10 digits = 10 steps. You can now see the digits swapping instead of 
	moving pixel-by-pixel*/
	animation: moveten 1s steps(10, end) infinite;
	/*By default animation should be paused*/
	animation-play-state: paused;
}
.movesix {
	animation: movesix 1s steps(6, end) infinite;
	animation-play-state: paused;
}

/*Now we need to sync the animation speed with time speed*/
/*One second per digit. 10 digits. Hence 10s*/
.second {animation-duration: 10s;}
.tensecond {animation-duration: 60s;} /*60 times .second*/

.milisecond {animation-duration: 1s;} /*1/10th of .second*/
.tenmilisecond {animation-duration: 0.1s;}
.hundredmilisecond {animation-duration: 0.01s;}

.minute {animation-duration: 600s;} /*60 times .second*/
.tenminute {animation-duration: 3600s;} /*60 times .minute*/

.hour {animation-duration: 36000s;} /*60 times .minute*/
.tenhour {animation-duration: 360000s;} /*10 times .hour*/

@keyframes moveten {
	0% {top: 0;}
	100% {top: -400px;} 
	/*height = 40. digits = 10. hence -400 to move it completely to the top*/
}

@keyframes movesix {
	0% {top: 0;}
	100% {top: -240px;} 
	/*height = 40. digits = 6. hence -240 to move it completely to the top*/
}
